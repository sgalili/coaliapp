export interface Country {
  code: string;
  name: string;
  flag: string;
  dialCode: string;
  format?: string;
}

export const countries: Country[] = [
  { code: 'US', name: 'United States', flag: 'ðŸ‡ºðŸ‡¸', dialCode: '+1' },
  { code: 'FR', name: 'France', flag: 'ðŸ‡«ðŸ‡·', dialCode: '+33' },
  { code: 'IL', name: 'Israel', flag: 'ðŸ‡®ðŸ‡±', dialCode: '+972' },
  { code: 'GB', name: 'United Kingdom', flag: 'ðŸ‡¬ðŸ‡§', dialCode: '+44' },
  { code: 'DE', name: 'Germany', flag: 'ðŸ‡©ðŸ‡ª', dialCode: '+49' },
  { code: 'ES', name: 'Spain', flag: 'ðŸ‡ªðŸ‡¸', dialCode: '+34' },
  { code: 'IT', name: 'Italy', flag: 'ðŸ‡®ðŸ‡¹', dialCode: '+39' },
  { code: 'CA', name: 'Canada', flag: 'ðŸ‡¨ðŸ‡¦', dialCode: '+1' },
  { code: 'AU', name: 'Australia', flag: 'ðŸ‡¦ðŸ‡º', dialCode: '+61' },
  { code: 'IN', name: 'India', flag: 'ðŸ‡®ðŸ‡³', dialCode: '+91' },
  { code: 'BR', name: 'Brazil', flag: 'ðŸ‡§ðŸ‡·', dialCode: '+55' },
  { code: 'MX', name: 'Mexico', flag: 'ðŸ‡²ðŸ‡½', dialCode: '+52' },
  { code: 'JP', name: 'Japan', flag: 'ðŸ‡¯ðŸ‡µ', dialCode: '+81' },
  { code: 'KR', name: 'South Korea', flag: 'ðŸ‡°ðŸ‡·', dialCode: '+82' },
  { code: 'CN', name: 'China', flag: 'ðŸ‡¨ðŸ‡³', dialCode: '+86' },
  { code: 'RU', name: 'Russia', flag: 'ðŸ‡·ðŸ‡º', dialCode: '+7' },
  { code: 'ZA', name: 'South Africa', flag: 'ðŸ‡¿ðŸ‡¦', dialCode: '+27' },
  { code: 'EG', name: 'Egypt', flag: 'ðŸ‡ªðŸ‡¬', dialCode: '+20' },
  { code: 'MA', name: 'Morocco', flag: 'ðŸ‡²ðŸ‡¦', dialCode: '+212' },
  { code: 'TN', name: 'Tunisia', flag: 'ðŸ‡¹ðŸ‡³', dialCode: '+216' },
  { code: 'AE', name: 'UAE', flag: 'ðŸ‡¦ðŸ‡ª', dialCode: '+971' },
  { code: 'SA', name: 'Saudi Arabia', flag: 'ðŸ‡¸ðŸ‡¦', dialCode: '+966' },
  { code: 'TR', name: 'Turkey', flag: 'ðŸ‡¹ðŸ‡·', dialCode: '+90' },
  { code: 'NL', name: 'Netherlands', flag: 'ðŸ‡³ðŸ‡±', dialCode: '+31' },
  { code: 'BE', name: 'Belgium', flag: 'ðŸ‡§ðŸ‡ª', dialCode: '+32' },
  { code: 'CH', name: 'Switzerland', flag: 'ðŸ‡¨ðŸ‡­', dialCode: '+41' },
  { code: 'AT', name: 'Austria', flag: 'ðŸ‡¦ðŸ‡¹', dialCode: '+43' },
  { code: 'SE', name: 'Sweden', flag: 'ðŸ‡¸ðŸ‡ª', dialCode: '+46' },
  { code: 'NO', name: 'Norway', flag: 'ðŸ‡³ðŸ‡´', dialCode: '+47' },
  { code: 'DK', name: 'Denmark', flag: 'ðŸ‡©ðŸ‡°', dialCode: '+45' },
];

export const getCountryByCode = (code: string): Country | undefined => {
  return countries.find(country => country.code === code);
};

export const getCountryByDialCode = (dialCode: string): Country | undefined => {
  return countries.find(country => country.dialCode === dialCode);
};

export const detectCountryFromTimezone = (): Country => {
  try {
    const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;
    
    // Simple timezone to country mapping
    const timezoneCountryMap: { [key: string]: string } = {
      'Europe/Paris': 'FR',
      'Europe/London': 'GB',
      'Europe/Berlin': 'DE',
      'Europe/Madrid': 'ES',
      'Europe/Rome': 'IT',
      'America/New_York': 'US',
      'America/Los_Angeles': 'US',
      'America/Chicago': 'US',
      'America/Denver': 'US',
      'America/Toronto': 'CA',
      'America/Vancouver': 'CA',
      'Australia/Sydney': 'AU',
      'Australia/Melbourne': 'AU',
      'Asia/Jerusalem': 'IL',
      'Asia/Tel_Aviv': 'IL',
      'Asia/Tokyo': 'JP',
      'Asia/Seoul': 'KR',
      'Asia/Shanghai': 'CN',
      'Asia/Dubai': 'AE',
      'Europe/Istanbul': 'TR',
      'Europe/Amsterdam': 'NL',
      'Europe/Brussels': 'BE',
      'Europe/Zurich': 'CH',
      'Europe/Vienna': 'AT',
      'Europe/Stockholm': 'SE',
      'Europe/Oslo': 'NO',
      'Europe/Copenhagen': 'DK',
    };
    
    const countryCode = timezoneCountryMap[timezone];
    if (countryCode) {
      const country = getCountryByCode(countryCode);
      if (country) return country;
    }
  } catch (error) {
    console.warn('Could not detect country from timezone:', error);
  }
  
  // Default to France
  return getCountryByCode('FR') || countries[0];
};